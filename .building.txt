NOTES ON BUILDING WAKAN.

I. You'll need unicode Delphi (Delphi 2010+). Wakan can be built on Ansi, but the support for that is being swiftly deprecated.
Checkout http://code.google.com/p/jp-tools/ which Wakan uses heavily.
Build and install JaletControls.

II. Copy wakan.chr from live wakan installation.
OR  Copy kanjidic file, Unihan folder from appropriate sources (google it).

III. Build Jalet.dpr.

If you want to pack executable, you'll need something like UPX.exe which is not included here.

IV. Run Wakan to generate:
  wakan.chr (if not present) -- character database
  wakan.usr -- empty user package
  wakan.sod -- stroke order package built from strokes.csv (included)
  wakan.rad -- raine radical search package built from RADKFILE/RADKFILE2 (see dependencies)

V. Import/update any dictionaries (EDICT2/CC-EDICT variations) into *.dic files.

VI. Pack these files into a distribution:
  jalet.exe -> wakan.exe
  wakan.cfg
  wakan.sod
  wakan.rad
  wakan.chr
  any dictionaries
  lng\*.*
  possibly: UNICONV.exe + related files
  possibly: wordfreq_ck for frequency generation


OPTIMIZATION

1. Enable inlining (inline:on or inline:auto).
It's very important that some critical functions are inlined for speed in release builds.
Therefore if you're doing the building, READ THIS:
http://docwiki.embarcadero.com/RADStudio/XE/en/Calling_Procedures_and_Functions#Using_the_inline_Directive
Note the list of cases when the inlining is not done.

2. Disable "Compiling> String format checking" in Delphi Project Options:
http://www.micro-isv.asia/2008/10/needless-string-checks-with-ensureunicodestring/
They shouldn't be needed, and even if by some mistake we put Ansi chars into UnicodeString, we better crash and fix that instead of hiding the bug.
Enabling this option also effectively disables the "const s:string" optimizations since functions will get refcount management frames for strings anyway.


DEPENDENCIES

1. UNICONV.exe - required for dictionary import.
http://ringtail.its.monash.edu.au/pub/nihongo/uniconv.zip
http://ringtail.its.monash.edu.au/pub/nihongo/uniconv.txt
Also see: http://www.autohotkey.com/board/topic/9831-uniconv-convert-unicode-cmd/

2. WORDFREQ_CK - required for adding frequency information to dictionaries
http://ftp.monash.edu.au/pub/nihongo/00INDEX.html
http://ftp.monash.edu.au/pub/nihongo/wordfreq_ck.gz
Also see: http://code.google.com/p/wakan/issues/detail?id=66

3. RADKFILE/RADKFILE2 - required for raine radicals search
http://www.csse.monash.edu.au/~jwb/kradinf.html
Download and place RADKFILE into Wakan release folder. You can import RADKFILE2 manually, but it's not yet supported.

4. 7z.dll -- 7zip library


MAINTENANCE

Stuff that has to be done regularly to keep Wakan up to date:
- Import new EDICT/ENAMDICT files
- Update EDICT marker list in JWBUnit.pas (see http://www.csse.monash.edu.au/~jwb/edict_doc.html and http://www.csse.monash.edu.au/~jwb/edict_doc_old.html for older markers)
- Update wakan.rad with new RADKFILEs (see dependencies)


ADDITIONAL STUFF

1. MadExcept (http://madshi.net/madExceptDescription.htm). Has an installer.
NOTE: Not required. Be sure to disable it's auto-insertion functionality (Tools-> Mad Except Configuration-> Adjust project uses clause).